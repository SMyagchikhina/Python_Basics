"""
6. Реализовать два небольших скрипта:
а) итератор, генерирующий целые числа, начиная с указанного,
б) итератор, повторяющий элементы некоторого списка, определенного заранее.

Подсказка: использовать функцию count() и cycle() модуля itertools.
Обратите внимание, что создаваемый цикл не должен быть бесконечным.
Необходимо предусмотреть условие его завершения.

Например, в первом задании выводим целые числа, начиная с 3,
а при достижении числа 10 завершаем цикл.
Во втором также необходимо предусмотреть условие,
при котором повторение элементов списка будет прекращено.
"""

from itertools import count, cycle

# а) итератор, генерирующий целые числа, начиная с указанного,

list_int = []

a_start = int(input("Укажите первое число последовательности:  "))
n_end = int(input("Укажите последнее число последовательности: "))

for x in count(a_start):
    if x > n_end:
        break
    print(x)
    list_int.append(x)

# б) итератор, повторяющий элементы некоторого списка, определенного заранее.
print()
print(list_int)

count = 0
for item in cycle(list_int):
    if count >= len(list_int):
        break
    print(item)
    count += 1

# второй вариант решения скрипта б:
print()
print(list_int)

for el in cycle(list_int):
    stop = input('Итерируемся дальше? Для выхода введите "нет" ')
    if stop.title() == 'Нет':
        break
    print(el)
    
    
